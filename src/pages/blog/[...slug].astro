---
import { getCollection } from "astro:content";
import { type CollectionEntry } from "astro:content";
import BlogLayout from "../../layouts/BlogLayout.astro";
import { getPosts } from "../../utils/post";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const posts = await getPosts();
const getRelatedPosts = (post: CollectionEntry<"blog">) => {
  const relatedPosts = posts.filter(
    (p) =>
      p.slug !== post.slug &&
      p.data.tags.some((t) => post.data.tags.includes(t)) &&
      p.data.team === post.data.team,
  );
  return relatedPosts.slice(0, 3);
};

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter } = await entry.render();
---

<BlogLayout
  id={entry.id}
  data={entry.data}
  readTime={remarkPluginFrontmatter.minutesRead}
  relatedPosts={getRelatedPosts(entry)}
>
  <article class="prose prose-md md:prose-lg dark:prose-invert min-w-full">
    <Content />
  </article>
</BlogLayout>
